{"ast":null,"code":"var _jsxFileName = \"/Users/Morgan/Development/stocker/frontend/src/containers/Home/Home.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router';\nimport { fetchStock } from '../../actions/fetchStock';\nimport { loginUser } from '../../actions/loginUser';\nimport axios from 'axios';\nimport Header from '../../components/Header/Header';\nimport StockContainer from '../StockContainer/StockContainer';\nimport Dashboard from '../Dashboard/Dashboard';\nimport './Home.css';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      stocksLoaded: false\n    };\n\n    this.componentDidMount = () => {\n      if (this.state.stocksLoaded === false) {\n        this.loginStatus();\n        this.setState({\n          stocksLoaded: true\n        });\n      }\n    };\n\n    this.loginStatus = () => {\n      axios.get('http://localhost:3000/logged_in', {\n        withCredentials: true\n      }).then(response => {\n        if (response.data.logged_in) {\n          const {\n            id,\n            username\n          } = response.data.user;\n          this.props.loginUser(username, parseInt(id));\n          fetch(`http://localhost:3000/stocks`, {\n            withCredentials: true\n          }).then(response => {\n            return response.json();\n          }).then(json => {\n            json.forEach(element => {\n              this.props.fetchStock(element.ticker_symbol, element.name, element.purchase_amount, element.purchase_price, element.id);\n            });\n          });\n        }\n      }).then().catch(error => console.log('api errors:', error));\n    };\n\n    this.handleLogoutClick = () => {\n      return axios.delete('http://localhost:3000/logout', {\n        withCredentials: true\n      }).then(response => {\n        this.props.history.push('/login');\n        window.location.reload();\n      }).catch(error => console.log(error));\n    };\n\n    this.ownedStocks = () => {\n      return this.props.stocks.filter(stock => stock.amountOfShares > 0);\n    };\n\n    this.watchedStocks = () => {\n      return this.props.stocks.filter(stock => stock.amountOfShares === null);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"app\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      user: this.props.user,\n      handleLogout: this.handleLogoutClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Dashboard, {\n      stocks: this.ownedStocks(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(StockContainer, {\n      user: this.props.user,\n      stocks: this.ownedStocks(),\n      stockType: \"OWNED\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(StockContainer, {\n      stocks: this.watchedStocks(),\n      stockType: \"FOLLOWING\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    stocks: state.stocksReducer.stocks,\n    user: state.userReducer.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchStock: (tickerSymbol, companyName, amountOfShares, costPerShare, id) => dispatch(fetchStock(tickerSymbol, companyName, amountOfShares, costPerShare, id)),\n    loginUser: (username, id) => dispatch(loginUser(username, id))\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));","map":{"version":3,"sources":["/Users/Morgan/Development/stocker/frontend/src/containers/Home/Home.js"],"names":["React","Component","connect","withRouter","fetchStock","loginUser","axios","Header","StockContainer","Dashboard","Home","state","stocksLoaded","componentDidMount","loginStatus","setState","get","withCredentials","then","response","data","logged_in","id","username","user","props","parseInt","fetch","json","forEach","element","ticker_symbol","name","purchase_amount","purchase_price","catch","error","console","log","handleLogoutClick","delete","history","push","window","location","reload","ownedStocks","stocks","filter","stock","amountOfShares","watchedStocks","render","mapStateToProps","stocksReducer","userReducer","mapDispatchToProps","dispatch","tickerSymbol","companyName","costPerShare"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { withRouter } from 'react-router'\nimport { fetchStock } from '../../actions/fetchStock'\nimport { loginUser } from '../../actions/loginUser'\nimport axios from 'axios'\n\nimport Header from '../../components/Header/Header'\nimport StockContainer from '../StockContainer/StockContainer';\nimport Dashboard from '../Dashboard/Dashboard'\n\nimport './Home.css';\n\nclass Home extends Component {\n\n  state = {\n    stocksLoaded: false\n  }\n\n  componentDidMount = () => {\n    if (this.state.stocksLoaded === false) {\n      this.loginStatus()\n      this.setState({\n        stocksLoaded: true\n      })\n    }\n  }\n\n  loginStatus = () => {\n    axios.get('http://localhost:3000/logged_in', {withCredentials: true})\n    .then(response => {\n      if (response.data.logged_in) {\n        const { id, username } = response.data.user\n        this.props.loginUser(username, parseInt(id))\n        fetch(`http://localhost:3000/stocks`, {withCredentials: true})\n        .then(response => {\n          return response.json();\n        })\n        .then(json => {    \n          json.forEach(element => {\n              this.props.fetchStock(element.ticker_symbol, element.name, element.purchase_amount, element.purchase_price, element.id)       \n          });\n        }) \n      }\n    })\n    .then(\n    )\n    .catch(error => console.log('api errors:', error))\n  }\n\n  handleLogoutClick = () => {\n    return axios.delete('http://localhost:3000/logout', {withCredentials: true})\n    .then(response => {\n        this.props.history.push('/login')\n        window.location.reload()\n    })\n    .catch(error => console.log(error))\n    }\n\n  ownedStocks = () => {\n    return this.props.stocks.filter(stock => stock.amountOfShares > 0)\n  }\n\n  watchedStocks = () => {\n    return this.props.stocks.filter(stock => stock.amountOfShares === null)\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header user={this.props.user} handleLogout={this.handleLogoutClick} />\n        <Dashboard stocks={this.ownedStocks()}/>\n        <StockContainer user ={this.props.user} stocks={this.ownedStocks()} stockType=\"OWNED\" />\n        <StockContainer stocks={this.watchedStocks()} stockType=\"FOLLOWING\" />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    stocks: state.stocksReducer.stocks,\n    user: state.userReducer.user\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return({\n    fetchStock: (tickerSymbol, companyName, amountOfShares, costPerShare, id) => dispatch(fetchStock(tickerSymbol, companyName, amountOfShares, costPerShare, id)),\n    loginUser: (username, id) => dispatch(loginUser(username, id))\n  })\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Home));\n"]},"metadata":{},"sourceType":"module"}