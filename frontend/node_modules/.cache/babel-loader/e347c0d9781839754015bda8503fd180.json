{"ast":null,"code":"var _jsxFileName = \"/Users/Morgan/Development/stocker/frontend/src/components/UserInvestments/UserInvestments.js\";\nimport React from \"react\";\nimport './UserInvestments.css';\n\nconst UserInvestments = ({\n  stocks\n}) => {\n  const currentValue = stocks.reduce((a, b) => {\n    return a + b.amountOfShares * b.c;\n  }, 0);\n  const previousCloseValue = stocks.reduce((a, b) => {\n    return a + b.amountOfShares * b.pc;\n  }, 0);\n  const originalValue = stocks.reduce((a, b) => {\n    return a + b.costPerShare * b.amountOfShares;\n  }, 0);\n  const percentChangeToday = currentValue > 0 ? ((currentValue - previousCloseValue) * 100 / previousCloseValue).toFixed(2) : '0.00';\n  const percentChangeOverall = currentValue > 0 ? ((currentValue - originalValue) * 100 / originalValue).toFixed(2) : '0.00';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-part\",\n    id: \"user-investments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"portfolio-value-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }\n  }, \" PORTFOLIO VALUE \"), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"portfolio-value-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 12\n    }\n  }, \"$\", currentValue.toLocaleString('en-US', {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"percent-change-today-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }\n  }, \" Change Today: \"), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"percent-change-today-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 12\n    }\n  }, percentChangeToday, \"%\"), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"percent-change-overall-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }\n  }, \" Change Overall: \"), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"percent-change-overall-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }\n  }, \" \", percentChangeOverall, \"% \"));\n};\n\nexport default UserInvestments;","map":{"version":3,"sources":["/Users/Morgan/Development/stocker/frontend/src/components/UserInvestments/UserInvestments.js"],"names":["React","UserInvestments","stocks","currentValue","reduce","a","b","amountOfShares","c","previousCloseValue","pc","originalValue","costPerShare","percentChangeToday","toFixed","percentChangeOverall","toLocaleString","minimumFractionDigits","maximumFractionDigits"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAc;AAElC,QAAMC,YAAY,GAAGD,MAAM,CAACE,MAAP,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACzC,WAAOD,CAAC,GAAIC,CAAC,CAACC,cAAF,GAAmBD,CAAC,CAACE,CAAjC;AACH,GAFoB,EAElB,CAFkB,CAArB;AAIA,QAAMC,kBAAkB,GAAGP,MAAM,CAACE,MAAP,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC/C,WAAOD,CAAC,GAAIC,CAAC,CAACC,cAAF,GAAmBD,CAAC,CAACI,EAAjC;AACH,GAF0B,EAExB,CAFwB,CAA3B;AAIA,QAAMC,aAAa,GAAGT,MAAM,CAACE,MAAP,CAAc,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC1C,WAAOD,CAAC,GAAIC,CAAC,CAACM,YAAF,GAAiBN,CAAC,CAACC,cAA/B;AACH,GAFqB,EAEnB,CAFmB,CAAtB;AAIA,QAAMM,kBAAkB,GAAIV,YAAY,GAAG,CAAhB,GAAqB,CAAC,CAACA,YAAY,GAAGM,kBAAhB,IAAsC,GAAtC,GAA4CA,kBAA7C,EAAiEK,OAAjE,CAAyE,CAAzE,CAArB,GAAmG,MAA9H;AACA,QAAMC,oBAAoB,GAAIZ,YAAY,GAAG,CAAhB,GAAqB,CAAC,CAACA,YAAY,GAAGQ,aAAhB,IAAiC,GAAjC,GAAuCA,aAAxC,EAAuDG,OAAvD,CAA+D,CAA/D,CAArB,GAAyF,MAAtH;AAEA,sBACG;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAgC,IAAA,EAAE,EAAC,kBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,EAAE,EAAC,uBAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,eAEI;AAAM,IAAA,EAAE,EAAC,uBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAmCX,YAAY,CAACa,cAAb,CAA4B,OAA5B,EAAqC;AAACC,IAAAA,qBAAqB,EAAE,CAAxB;AAA2BC,IAAAA,qBAAqB,EAAE;AAAlD,GAArC,CAAnC,CAFJ,eAGI;AAAM,IAAA,EAAE,EAAC,4BAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAHJ,eAII;AAAM,IAAA,EAAE,EAAC,4BAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCL,kBAAvC,MAJJ,eAKI;AAAM,IAAA,EAAE,EAAC,8BAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBALJ,eAMI;AAAM,IAAA,EAAE,EAAC,8BAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA0CE,oBAA1C,OANJ,CADH;AAUH,CA3BD;;AA6BA,eAAed,eAAf","sourcesContent":["import React from \"react\"\nimport './UserInvestments.css'\n\nconst UserInvestments = ({stocks}) => {\n\n    const currentValue = stocks.reduce((a, b) => {\n        return a + (b.amountOfShares * b.c)\n    }, 0)\n    \n    const previousCloseValue = stocks.reduce((a, b) => {\n        return a + (b.amountOfShares * b.pc)\n    }, 0)\n\n    const originalValue = stocks.reduce((a, b) => {\n        return a + (b.costPerShare * b.amountOfShares)\n    }, 0)\n\n    const percentChangeToday = (currentValue > 0) ? ((currentValue - previousCloseValue) * 100 / previousCloseValue).toFixed(2) : '0.00'   \n    const percentChangeOverall = (currentValue > 0) ? ((currentValue - originalValue) * 100 / originalValue).toFixed(2) : '0.00'\n\n    return (\n       <div className=\"dashboard-part\" id=\"user-investments\">\n           <h3 id=\"portfolio-value-title\"> PORTFOLIO VALUE </h3>\n           <span id=\"portfolio-value-value\">${currentValue.toLocaleString('en-US', {minimumFractionDigits: 2, maximumFractionDigits: 2})}</span>\n           <span id=\"percent-change-today-title\"> Change Today: </span>\n           <span id=\"percent-change-today-value\">{percentChangeToday}%</span>\n           <span id=\"percent-change-overall-title\"> Change Overall: </span>\n           <span id=\"percent-change-overall-value\"> {percentChangeOverall}% </span>\n       </div>\n    )\n}\n\nexport default UserInvestments"]},"metadata":{},"sourceType":"module"}