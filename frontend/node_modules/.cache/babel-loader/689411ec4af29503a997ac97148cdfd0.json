{"ast":null,"code":"var _jsxFileName = \"/Users/Morgan/Development/stocker/frontend/src/components/AddStockForm/AddStockForm.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { fetchStock } from \"../../actions/fetchStock\";\nimport AsyncSelect from 'react-select/async';\nimport './AddStockForm.css';\n\nclass AddStockForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      value: '',\n      tickerSymbol: '',\n      companyName: '',\n      stockArray: [],\n      amountOfShares: 0,\n      costPerShare: 0\n    };\n\n    this.filterStocks = value => {\n      const returnArray = this.state.stockArray.filter(stock => stock.label.toLowerCase().includes(value.toLowerCase()));\n\n      if (returnArray.length > 100) {\n        return returnArray.slice(0, 100);\n      }\n\n      return returnArray;\n    };\n\n    this.loadOptions = (value, callback) => {\n      setTimeout(() => {\n        callback(this.filterStocks(value));\n      }, 1000);\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      const amountOfShares = isNaN(this.state.amountOfShares) || this.state.amountOfShares === 0 ? null : this.state.amountOfShares;\n      const costPerShare = isNaN(this.state.costPerShare) || this.state.costPerShare === 0 ? null : this.state.costPerShare;\n\n      if (this.state.tickerSymbol !== \"\" && this.state.companyName !== \"\") {\n        axios.post(\"http://localhost:3000/stocks\", {\n          stock: {\n            purchase_amount: amountOfShares,\n            purchase_price: costPerShare,\n            ticker_symbol: this.state.tickerSymbol,\n            name: this.state.companyName\n          }\n        }, {\n          withCredentials: true\n        }).then(response => {\n          this.props.fetchStock(this.state.tickerSymbol, this.state.companyName, amountOfShares, costPerShare, response.data.id);\n          this.setState({\n            value: '',\n            tickerSymbol: '',\n            companyName: '',\n            amountOfShares: 0,\n            costPerShare: 0\n          });\n        }).catch(error => {\n          console.log(error);\n        });\n      } else {\n        alert('Error - Please select a stock.');\n      }\n    };\n\n    this.handleSelectChange = event => {\n      this.setState({\n        value: event.label,\n        tickerSymbol: event.value,\n        companyName: event.label\n      });\n    };\n\n    this.handleQuantityOrPriceChange = event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n  }\n\n  componentDidMount() {\n    return fetch('https://finnhub.io/api/v1/stock/symbol?exchange=US&token=bqfppqvrh5r9oe99locg').then(response => {\n      return response.json();\n    }).then(json => {\n      this.setState({\n        stockArray: json.map(stock => {\n          return {\n            value: stock.displaySymbol,\n            label: stock.description\n          };\n        })\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dashboard-part\",\n      id: \"add-stock-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      id: \"add-stock-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"ADD STOCK\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      id: \"add-stock-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AsyncSelect, {\n      value: this.state.value,\n      placeholder: this.state.value || 'Select...',\n      loadOptions: this.loadOptions,\n      defaultOptions: true,\n      onChange: this.handleSelectChange,\n      onBlur: () => event => {\n        event.preventDefault();\n      },\n      id: \"react-select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"stock-purchase-quantity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }, \"QUANTITY\"), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"stock-purchase-price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, \"PRICE\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"amountOfShares\",\n      value: this.state.amountOfShares,\n      onChange: this.handleQuantityOrPriceChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"costPerShare\",\n      value: this.state.costPerShare,\n      onChange: this.handleQuantityOrPriceChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchStock: (tickerSymbol, companyName, amountOfShares, costPerShare, stockId) => dispatch(fetchStock(tickerSymbol, companyName, amountOfShares, costPerShare, stockId))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(AddStockForm);","map":{"version":3,"sources":["/Users/Morgan/Development/stocker/frontend/src/components/AddStockForm/AddStockForm.js"],"names":["React","Component","connect","axios","fetchStock","AsyncSelect","AddStockForm","state","value","tickerSymbol","companyName","stockArray","amountOfShares","costPerShare","filterStocks","returnArray","filter","stock","label","toLowerCase","includes","length","slice","loadOptions","callback","setTimeout","handleSubmit","event","preventDefault","isNaN","post","purchase_amount","purchase_price","ticker_symbol","name","withCredentials","then","response","props","data","id","setState","catch","error","console","log","alert","handleSelectChange","handleQuantityOrPriceChange","target","componentDidMount","fetch","json","map","displaySymbol","description","render","mapDispatchToProps","dispatch","stockId"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport axios from 'axios'\n\nimport { fetchStock } from \"../../actions/fetchStock\";\nimport AsyncSelect from 'react-select/async';\nimport './AddStockForm.css'\n\n\nclass AddStockForm extends Component {\n\n    state = {\n        value: '',\n        tickerSymbol: '',\n        companyName: '',\n        stockArray: [],\n        amountOfShares: 0,\n        costPerShare: 0,\n    }\n\n    componentDidMount() {\n        return fetch('https://finnhub.io/api/v1/stock/symbol?exchange=US&token=bqfppqvrh5r9oe99locg')\n        .then(response => {\n            return response.json()\n        })\n        .then(json => {\n            this.setState({\n                stockArray: json.map(stock => { \n                    return { value: stock.displaySymbol, label: stock.description}\n                })\n            })\n        })\n    }\n\n    filterStocks = (value) => {\n        const returnArray = this.state.stockArray.filter(stock =>\n          stock.label.toLowerCase().includes(value.toLowerCase())\n        )\n        if (returnArray.length > 100) {\n            return returnArray.slice(0, 100)\n        }\n        return returnArray;\n      };\n      \n    loadOptions = (value, callback) => {\n        setTimeout(() => {\n          callback(this.filterStocks(value));\n        }, 1000);\n    };\n\n    handleSubmit = event => {\n        event.preventDefault()\n\n        const amountOfShares = (isNaN(this.state.amountOfShares) || this.state.amountOfShares === 0) ? null : this.state.amountOfShares\n        const costPerShare = (isNaN(this.state.costPerShare) || this.state.costPerShare === 0) ? null : this.state.costPerShare\n        if (this.state.tickerSymbol !== \"\" && this.state.companyName !== \"\") {\n            axios.post(\"http://localhost:3000/stocks\", {\n                stock: {\n                purchase_amount: amountOfShares,\n                purchase_price: costPerShare,\n                ticker_symbol: this.state.tickerSymbol,\n                name: this.state.companyName\n                }\n            }, {withCredentials: true})\n            .then(response => {\n                this.props.fetchStock(this.state.tickerSymbol, this.state.companyName, amountOfShares, costPerShare, response.data.id)\n                this.setState({\n                    value: '',\n                    tickerSymbol: '',\n                    companyName: '',\n                    amountOfShares: 0,\n                    costPerShare: 0,\n                })\n            })\n            .catch(error => {\n                console.log(error)\n            })\n        } else {\n            alert('Error - Please select a stock.')\n        }\n    }\n\n    handleSelectChange = event => {\n        this.setState({\n            value: event.label,\n            tickerSymbol: event.value,\n            companyName: event.label\n        })\n    }\n\n    handleQuantityOrPriceChange = event => {\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n\n    render () {\n        return (\n            <div className=\"dashboard-part\" id='add-stock-form'>\n                <h3 id=\"add-stock-title\">ADD STOCK</h3>\n                <form onSubmit={this.handleSubmit} id=\"add-stock-select\">\n                    <AsyncSelect\n                        value={this.state.value}\n                        placeholder={this.state.value || 'Select...'}\n                        loadOptions={this.loadOptions}\n                        defaultOptions={true}\n                        onChange={this.handleSelectChange}\n                        onBlur={() => (event) => {event.preventDefault()}}\n                        id=\"react-select\"\n                    />\n                    <div id=\"stock-purchase-quantity\">QUANTITY</div> \n                    <div id=\"stock-purchase-price\">PRICE</div>\n                    <input type=\"text\" name=\"amountOfShares\" value={this.state.amountOfShares} onChange={this.handleQuantityOrPriceChange} />\n                    <input type=\"text\" name=\"costPerShare\" value={this.state.costPerShare} onChange={this.handleQuantityOrPriceChange} />                   \n                    <button>Submit</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return({\n        fetchStock: (tickerSymbol, companyName, amountOfShares, costPerShare, stockId) => dispatch(fetchStock(tickerSymbol, companyName, amountOfShares, costPerShare, stockId))\n    })\n}\n\nexport default connect(null, mapDispatchToProps)(AddStockForm)\n"]},"metadata":{},"sourceType":"module"}